// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: unmango/dev/ux/v1alpha1/ux.proto

package uxv1alpha1

import (
	v1alpha1 "github.com/unstoppablemango/tdl/pkg/unmango/dev/tdl/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec    *v1alpha1.Spec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	Targets []string       `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *GenRequest) Reset() {
	*x = GenRequest{}
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenRequest) ProtoMessage() {}

func (x *GenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenRequest.ProtoReflect.Descriptor instead.
func (*GenRequest) Descriptor() ([]byte, []int) {
	return file_unmango_dev_ux_v1alpha1_ux_proto_rawDescGZIP(), []int{0}
}

func (x *GenRequest) GetSpec() *v1alpha1.Spec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *GenRequest) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

type GenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets map[string]*TargetOutput `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GenResponse) Reset() {
	*x = GenResponse{}
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenResponse) ProtoMessage() {}

func (x *GenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenResponse.ProtoReflect.Descriptor instead.
func (*GenResponse) Descriptor() ([]byte, []int) {
	return file_unmango_dev_ux_v1alpha1_ux_proto_rawDescGZIP(), []int{1}
}

func (x *GenResponse) GetTargets() map[string]*TargetOutput {
	if x != nil {
		return x.Targets
	}
	return nil
}

type TargetOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Output map[string]*v1alpha1.Unit `protobuf:"bytes,2,rep,name=output,proto3" json:"output,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TargetOutput) Reset() {
	*x = TargetOutput{}
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetOutput) ProtoMessage() {}

func (x *TargetOutput) ProtoReflect() protoreflect.Message {
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetOutput.ProtoReflect.Descriptor instead.
func (*TargetOutput) Descriptor() ([]byte, []int) {
	return file_unmango_dev_ux_v1alpha1_ux_proto_rawDescGZIP(), []int{2}
}

func (x *TargetOutput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TargetOutput) GetOutput() map[string]*v1alpha1.Unit {
	if x != nil {
		return x.Output
	}
	return nil
}

type FileInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FileInput) Reset() {
	*x = FileInput{}
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInput) ProtoMessage() {}

func (x *FileInput) ProtoReflect() protoreflect.Message {
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInput.ProtoReflect.Descriptor instead.
func (*FileInput) Descriptor() ([]byte, []int) {
	return file_unmango_dev_ux_v1alpha1_ux_proto_rawDescGZIP(), []int{3}
}

func (x *FileInput) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Input_Inline
	//	*Input_File
	//	*Input_Stdin
	Value isInput_Value `protobuf_oneof:"value"`
}

func (x *Input) Reset() {
	*x = Input{}
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_unmango_dev_ux_v1alpha1_ux_proto_rawDescGZIP(), []int{4}
}

func (m *Input) GetValue() isInput_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Input) GetInline() *v1alpha1.Spec {
	if x, ok := x.GetValue().(*Input_Inline); ok {
		return x.Inline
	}
	return nil
}

func (x *Input) GetFile() *FileInput {
	if x, ok := x.GetValue().(*Input_File); ok {
		return x.File
	}
	return nil
}

func (x *Input) GetStdin() bool {
	if x, ok := x.GetValue().(*Input_Stdin); ok {
		return x.Stdin
	}
	return false
}

type isInput_Value interface {
	isInput_Value()
}

type Input_Inline struct {
	Inline *v1alpha1.Spec `protobuf:"bytes,1,opt,name=inline,proto3,oneof"`
}

type Input_File struct {
	File *FileInput `protobuf:"bytes,2,opt,name=file,proto3,oneof"`
}

type Input_Stdin struct {
	Stdin bool `protobuf:"varint,3,opt,name=stdin,proto3,oneof"`
}

func (*Input_Inline) isInput_Value() {}

func (*Input_File) isInput_Value() {}

func (*Input_Stdin) isInput_Value() {}

type RunConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs []*Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// Types that are assignable to Output:
	//
	//	*RunConfig_Stdout
	//	*RunConfig_Path
	Output isRunConfig_Output `protobuf_oneof:"output"`
}

func (x *RunConfig) Reset() {
	*x = RunConfig{}
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunConfig) ProtoMessage() {}

func (x *RunConfig) ProtoReflect() protoreflect.Message {
	mi := &file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunConfig.ProtoReflect.Descriptor instead.
func (*RunConfig) Descriptor() ([]byte, []int) {
	return file_unmango_dev_ux_v1alpha1_ux_proto_rawDescGZIP(), []int{5}
}

func (x *RunConfig) GetInputs() []*Input {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (m *RunConfig) GetOutput() isRunConfig_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *RunConfig) GetStdout() bool {
	if x, ok := x.GetOutput().(*RunConfig_Stdout); ok {
		return x.Stdout
	}
	return false
}

func (x *RunConfig) GetPath() string {
	if x, ok := x.GetOutput().(*RunConfig_Path); ok {
		return x.Path
	}
	return ""
}

type isRunConfig_Output interface {
	isRunConfig_Output()
}

type RunConfig_Stdout struct {
	Stdout bool `protobuf:"varint,2,opt,name=stdout,proto3,oneof"`
}

type RunConfig_Path struct {
	Path string `protobuf:"bytes,3,opt,name=path,proto3,oneof"`
}

func (*RunConfig_Stdout) isRunConfig_Output() {}

func (*RunConfig_Path) isRunConfig_Output() {}

var File_unmango_dev_ux_v1alpha1_ux_proto protoreflect.FileDescriptor

var file_unmango_dev_ux_v1alpha1_ux_proto_rawDesc = []byte{
	0x0a, 0x20, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x75, 0x78,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x17, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x75, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x22, 0x75, 0x6e, 0x6d,
	0x61, 0x6e, 0x67, 0x6f, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x74, 0x64, 0x6c, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x74, 0x64, 0x6c,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74,
	0x64, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x75, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x1a, 0x61, 0x0a,
	0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x75, 0x78, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x75, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x1a, 0x59, 0x0a, 0x0b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74,
	0x64, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1f, 0x0a, 0x09, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x9c, 0x01, 0x0a,
	0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x74, 0x64, 0x6c, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x75, 0x78, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x73, 0x74,
	0x64, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x64,
	0x69, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x7d, 0x0a, 0x09, 0x52,
	0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e,
	0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x75, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x42, 0x08, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0x5d, 0x0a, 0x09, 0x55, 0x78,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x03, 0x47, 0x65, 0x6e, 0x12, 0x23,
	0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x75, 0x78, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x75, 0x78, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xed, 0x01, 0x0a, 0x1b, 0x63, 0x6f,
	0x6d, 0x2e, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x75, 0x78,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x07, 0x55, 0x78, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x75, 0x6e, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x6d, 0x61, 0x6e, 0x67,
	0x6f, 0x2f, 0x74, 0x64, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x75, 0x6e, 0x6d, 0x61, 0x6e, 0x67,
	0x6f, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x75, 0x78, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x3b, 0x75, 0x78, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x55,
	0x44, 0x55, 0xaa, 0x02, 0x17, 0x55, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2e, 0x44, 0x65, 0x76,
	0x2e, 0x55, 0x78, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x17, 0x55,
	0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x5c, 0x44, 0x65, 0x76, 0x5c, 0x55, 0x78, 0x5c, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x23, 0x55, 0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f,
	0x5c, 0x44, 0x65, 0x76, 0x5c, 0x55, 0x78, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x55,
	0x6e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x3a, 0x3a, 0x44, 0x65, 0x76, 0x3a, 0x3a, 0x55, 0x78, 0x3a,
	0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_unmango_dev_ux_v1alpha1_ux_proto_rawDescOnce sync.Once
	file_unmango_dev_ux_v1alpha1_ux_proto_rawDescData = file_unmango_dev_ux_v1alpha1_ux_proto_rawDesc
)

func file_unmango_dev_ux_v1alpha1_ux_proto_rawDescGZIP() []byte {
	file_unmango_dev_ux_v1alpha1_ux_proto_rawDescOnce.Do(func() {
		file_unmango_dev_ux_v1alpha1_ux_proto_rawDescData = protoimpl.X.CompressGZIP(file_unmango_dev_ux_v1alpha1_ux_proto_rawDescData)
	})
	return file_unmango_dev_ux_v1alpha1_ux_proto_rawDescData
}

var file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_unmango_dev_ux_v1alpha1_ux_proto_goTypes = []any{
	(*GenRequest)(nil),    // 0: unmango.dev.ux.v1alpha1.GenRequest
	(*GenResponse)(nil),   // 1: unmango.dev.ux.v1alpha1.GenResponse
	(*TargetOutput)(nil),  // 2: unmango.dev.ux.v1alpha1.TargetOutput
	(*FileInput)(nil),     // 3: unmango.dev.ux.v1alpha1.FileInput
	(*Input)(nil),         // 4: unmango.dev.ux.v1alpha1.Input
	(*RunConfig)(nil),     // 5: unmango.dev.ux.v1alpha1.RunConfig
	nil,                   // 6: unmango.dev.ux.v1alpha1.GenResponse.TargetsEntry
	nil,                   // 7: unmango.dev.ux.v1alpha1.TargetOutput.OutputEntry
	(*v1alpha1.Spec)(nil), // 8: unmango.dev.tdl.v1alpha1.Spec
	(*v1alpha1.Unit)(nil), // 9: unmango.dev.tdl.v1alpha1.Unit
}
var file_unmango_dev_ux_v1alpha1_ux_proto_depIdxs = []int32{
	8, // 0: unmango.dev.ux.v1alpha1.GenRequest.spec:type_name -> unmango.dev.tdl.v1alpha1.Spec
	6, // 1: unmango.dev.ux.v1alpha1.GenResponse.targets:type_name -> unmango.dev.ux.v1alpha1.GenResponse.TargetsEntry
	7, // 2: unmango.dev.ux.v1alpha1.TargetOutput.output:type_name -> unmango.dev.ux.v1alpha1.TargetOutput.OutputEntry
	8, // 3: unmango.dev.ux.v1alpha1.Input.inline:type_name -> unmango.dev.tdl.v1alpha1.Spec
	3, // 4: unmango.dev.ux.v1alpha1.Input.file:type_name -> unmango.dev.ux.v1alpha1.FileInput
	4, // 5: unmango.dev.ux.v1alpha1.RunConfig.inputs:type_name -> unmango.dev.ux.v1alpha1.Input
	2, // 6: unmango.dev.ux.v1alpha1.GenResponse.TargetsEntry.value:type_name -> unmango.dev.ux.v1alpha1.TargetOutput
	9, // 7: unmango.dev.ux.v1alpha1.TargetOutput.OutputEntry.value:type_name -> unmango.dev.tdl.v1alpha1.Unit
	0, // 8: unmango.dev.ux.v1alpha1.UxService.Gen:input_type -> unmango.dev.ux.v1alpha1.GenRequest
	1, // 9: unmango.dev.ux.v1alpha1.UxService.Gen:output_type -> unmango.dev.ux.v1alpha1.GenResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_unmango_dev_ux_v1alpha1_ux_proto_init() }
func file_unmango_dev_ux_v1alpha1_ux_proto_init() {
	if File_unmango_dev_ux_v1alpha1_ux_proto != nil {
		return
	}
	file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[4].OneofWrappers = []any{
		(*Input_Inline)(nil),
		(*Input_File)(nil),
		(*Input_Stdin)(nil),
	}
	file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes[5].OneofWrappers = []any{
		(*RunConfig_Stdout)(nil),
		(*RunConfig_Path)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_unmango_dev_ux_v1alpha1_ux_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_unmango_dev_ux_v1alpha1_ux_proto_goTypes,
		DependencyIndexes: file_unmango_dev_ux_v1alpha1_ux_proto_depIdxs,
		MessageInfos:      file_unmango_dev_ux_v1alpha1_ux_proto_msgTypes,
	}.Build()
	File_unmango_dev_ux_v1alpha1_ux_proto = out.File
	file_unmango_dev_ux_v1alpha1_ux_proto_rawDesc = nil
	file_unmango_dev_ux_v1alpha1_ux_proto_goTypes = nil
	file_unmango_dev_ux_v1alpha1_ux_proto_depIdxs = nil
}
