name: CLI

on:
  pull_request:
    branches: ['main']
    paths:
      - .github/actions/**
      - .github/workflows/cli.yml
      - cli/**
      - src/Cli/**
      - src/Cli.Tests/**
  push:
    branches: ['main']
    tags: ['v*.*.*']
    paths:
      - .github/actions/**
      - .github/workflows/cli.yml
      - cli/**
      - src/Cli/**
      - src/Cli.Tests/**

env:
  CI: true
  ContinuousIntegrationBuild: true

jobs:
  build-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - uses: ./.github/actions/build-cs
        id: upload
        with:
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          restore-tools: true
          lint: true
          pack: ${{ github.event_name == 'push' }}
          path: src/Cli

    outputs:
      artifact-id: ${{ steps.upload.outputs.artifact-id }}

  publish-cli:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: ['build-cli']
    strategy:
      matrix:
        source: ['nuget', 'github']
    env:
      PACKAGE_PATTERN: UnMango.Tdl.*.nupkg
    permissions:
      packages: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget

      - name: Publish to NuGet.org
        if: matrix.source == 'nuget'
        run: |
          dotnet nuget push "$PACKAGE_PATTERN" \
            --source https://api.nuget.org/v3/index.json \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --skip-duplicate

      - name: Authenticate to GitHub Packages
        if: matrix.source == 'github'
        run: |
          dotnet nuget add source \
            --username ${{ github.repository_owner }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            --store-password-in-clear-text \
            --name github \
            "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Publish to GitHub Packages
        if: matrix.source == 'github'
        run: |
          dotnet nuget push "$PACKAGE_PATTERN" \
            --source ${{ matrix.source }} \
            --skip-duplicate

  build-go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tool:
          - uml2go
          - uml2pcl
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/build-go
        with:
          path: cli/${{ matrix.tool }}
          gomod: cli/go.mod
